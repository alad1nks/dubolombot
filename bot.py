import telebot
import config
import requests
from datetime import datetime
from telebot import types

bot = telebot.TeleBot(config.token)


@bot.message_handler(commands=["start"])
def welcome(message):
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    i1 = types.KeyboardButton("üá∑üá∫–†—É–±–ª—åüá∑üá∫")
    i2 = types.KeyboardButton("üí≤–î–æ–ª–ª–∞—Äüí≤")
    i3 = types.KeyboardButton("üÜô–ë–∏—Ç–∫–æ–∏–ΩüÜô")
    i4 = types.KeyboardButton("üåØ–≠—Ñ–∏—Ä–∏—É–ºüåØ")
    i5 = types.KeyboardButton("ü§ëTetherü§ë")
    i6 = types.KeyboardButton("‚ú°Binance Coin‚ú°")
    i7 = types.KeyboardButton("üêïDogecoinüêï")
    i8 = types.KeyboardButton("ü™ôLitecoinü™ô")
    markup.add(i1, i2, i3, i4, i5, i6, i7, i8)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {0.first_name}! –ú–µ–Ω—è –∑–æ–≤—É—Ç –î—É–±–æ–ª–æ–º. –Ø –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Å–ª–µ–∂–µ–Ω–∏–µ –∑–∞ –∫—É—Ä—Å–æ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.\n–í—ã–±–µ—Ä–∏ –∏–º–µ—é—â—É—é—Å—è –≤–∞–ª—é—Ç—É:".format(
        message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üá∑üá∫–†—É–±–ª—åüá∑üá∫':
            markup = types.InlineKeyboardMarkup(row_width=2)
            i2 = types.InlineKeyboardButton("–î–æ–ª–ª–∞—Ä", callback_data='usd_rur')
            i3 = types.InlineKeyboardButton("–ë–∏—Ç–∫–æ–∏–Ω", callback_data='btc_rur')
            i4 = types.InlineKeyboardButton("–≠—Ñ–∏—Ä–∏—É–º", callback_data='eth_rur')
            i5 = types.InlineKeyboardButton("Tether", callback_data='rur_usdt')
            i6 = types.InlineKeyboardButton(
                "Binance Coin", callback_data='bnb_rur')
            i7 = types.InlineKeyboardButton(
                "Dogecoin", callback_data='doge_rur')
            i8 = types.InlineKeyboardButton(
                "Litecoin", callback_data='ltc_rur')
            markup.add(i2, i3, i4, i5, i6, i7, i8)

            bot.send_message(
                message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É. –Ø –æ—Ç–ø—Ä–∞–≤–ª—é –∫—É—Ä—Å üá∑üá∫–†—É–±–ª—åüá∑üá∫? –∫ —ç—Ç–æ–π –≤–∞–ª—é—Ç–µ.', reply_markup=markup)
        elif message.text == 'üí≤–î–æ–ª–ª–∞—Äüí≤':
            markup = types.InlineKeyboardMarkup(row_width=2)
            i1 = types.InlineKeyboardButton("–†—É–±–ª—å", callback_data='usd_rur')
            i3 = types.InlineKeyboardButton("–ë–∏—Ç–∫–æ–∏–Ω", callback_data='btc_usd')
            i4 = types.InlineKeyboardButton("–≠—Ñ–∏—Ä–∏—É–º", callback_data='eth_usd')
            i5 = types.InlineKeyboardButton("Tether", callback_data='usd_usdt')
            i6 = types.InlineKeyboardButton(
                "Binance Coin", callback_data='bnb_usd')
            i7 = types.InlineKeyboardButton(
                "Dogecoin", callback_data='doge_usd')
            i8 = types.InlineKeyboardButton(
                "Litecoin", callback_data='ltc_usd')
            markup.add(i1, i3, i4, i5, i6, i7, i8)

            bot.send_message(
                message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É. –Ø –æ—Ç–ø—Ä–∞–≤–ª—é –∫—É—Ä—Å üí≤–î–æ–ª–ª–∞—Äüí≤ –∫ —ç—Ç–æ–π –≤–∞–ª—é—Ç–µ.', reply_markup=markup)
        elif message.text == 'üÜô–ë–∏—Ç–∫–æ–∏–ΩüÜô':
            markup = types.InlineKeyboardMarkup(row_width=2)
            i1 = types.InlineKeyboardButton("–†—É–±–ª—å", callback_data='btc_rur')
            i2 = types.InlineKeyboardButton("–î–æ–ª–ª–∞—Ä", callback_data='btc_usd')
            i4 = types.InlineKeyboardButton("–≠—Ñ–∏—Ä–∏—É–º", callback_data='eth_btc')
            i5 = types.InlineKeyboardButton("Tether", callback_data='btc_usdt')
            i6 = types.InlineKeyboardButton(
                "Binance Coin", callback_data='bnb_btc')
            i7 = types.InlineKeyboardButton(
                "Dogecoin", callback_data='doge_btc')
            i8 = types.InlineKeyboardButton(
                "Litecoin", callback_data='ltc_btc')
            markup.add(i1, i2, i4, i5, i6, i7, i8)

            bot.send_message(
                message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É. –Ø –æ—Ç–ø—Ä–∞–≤–ª—é –∫—É—Ä—Å üÜô–ë–∏—Ç–∫–æ–∏–ΩüÜô –∫ —ç—Ç–æ–π –≤–∞–ª—é—Ç–µ.', reply_markup=markup)
        elif message.text == 'üåØ–≠—Ñ–∏—Ä–∏—É–ºüåØ':
            markup = types.InlineKeyboardMarkup(row_width=2)
            i1 = types.InlineKeyboardButton("–†—É–±–ª—å", callback_data='eth_rur')
            i2 = types.InlineKeyboardButton("–î–æ–ª–ª–∞—Ä", callback_data='eth_usd')
            i3 = types.InlineKeyboardButton("–ë–∏—Ç–∫–æ–∏–Ω", callback_data='eth_btc')
            i5 = types.InlineKeyboardButton("Tether", callback_data='eth_usdt')
            i6 = types.InlineKeyboardButton(
                "Binance Coin", callback_data='bnb_eth')
            i7 = types.InlineKeyboardButton(
                "Dogecoin", callback_data='eth_doge')
            i8 = types.InlineKeyboardButton(
                "Litecoin", callback_data='ltc_eth')
            markup.add(i1, i2, i3, i5, i6, i7, i8)

            bot.send_message(
                message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É. –Ø –æ—Ç–ø—Ä–∞–≤–ª—é –∫—É—Ä—Å üåØ–≠—Ñ–∏—Ä–∏—É–ºüåØ –∫ —ç—Ç–æ–π –≤–∞–ª—é—Ç–µ.', reply_markup=markup)
        elif message.text == 'ü§ëTetherü§ë':
            markup = types.InlineKeyboardMarkup(row_width=2)
            i1 = types.InlineKeyboardButton("–†—É–±–ª—å", callback_data='usdt_rur')
            i2 = types.InlineKeyboardButton("–î–æ–ª–ª–∞—Ä", callback_data='usdt_usd')
            i3 = types.InlineKeyboardButton(
                "–ë–∏—Ç–∫–æ–∏–Ω", callback_data='usdt_btc')
            i4 = types.InlineKeyboardButton(
                "–≠—Ñ–∏—Ä–∏—É–º", callback_data='usdt_eth')
            i6 = types.InlineKeyboardButton(
                "Binance Coin", callback_data='bnb_usdt')
            i7 = types.InlineKeyboardButton(
                "Dogecoin", callback_data='usdt_doge')
            i8 = types.InlineKeyboardButton(
                "Litecoin", callback_data='ltc_usdt')
            markup.add(i1, i2, i3, i4, i6, i7, i8)

            bot.send_message(
                message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É. –Ø –æ—Ç–ø—Ä–∞–≤–ª—é –∫—É—Ä—Å ü§ëTetherü§ë –∫ —ç—Ç–æ–π –≤–∞–ª—é—Ç–µ.', reply_markup=markup)
        elif message.text == '‚ú°Binance Coin‚ú°':
            markup = types.InlineKeyboardMarkup(row_width=2)
            i1 = types.InlineKeyboardButton("–†—É–±–ª—å", callback_data='bnb_rur')
            i2 = types.InlineKeyboardButton("–î–æ–ª–ª–∞—Ä", callback_data='bnb_usd')
            i3 = types.InlineKeyboardButton("–ë–∏—Ç–∫–æ–∏–Ω", callback_data='bnb_btc')
            i4 = types.InlineKeyboardButton("–≠—Ñ–∏—Ä–∏—É–º", callback_data='bnb_eth')
            i5 = types.InlineKeyboardButton("Tether", callback_data='bnb_usdt')
            i7 = types.InlineKeyboardButton(
                "Dogecoin", callback_data='bnb_doge')
            markup.add(i1, i2, i3, i4, i5, i7)

            bot.send_message(
                message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É. –Ø –æ—Ç–ø—Ä–∞–≤–ª—é –∫—É—Ä—Å ‚ú°Binance Coin‚ú° –∫ —ç—Ç–æ–π –≤–∞–ª—é—Ç–µ.', reply_markup=markup)
        elif message.text == 'üêïDogecoinüêï':
            markup = types.InlineKeyboardMarkup(row_width=2)
            i1 = types.InlineKeyboardButton("–†—É–±–ª—å", callback_data='doge_rur')
            i2 = types.InlineKeyboardButton("–î–æ–ª–ª–∞—Ä", callback_data='doge_usd')
            i3 = types.InlineKeyboardButton(
                "–ë–∏—Ç–∫–æ–∏–Ω", callback_data='doge_btc')
            i4 = types.InlineKeyboardButton(
                "–≠—Ñ–∏—Ä–∏—É–º", callback_data='doge_eth')
            i5 = types.InlineKeyboardButton(
                "Tether", callback_data='doge_usdt')
            i6 = types.InlineKeyboardButton(
                "Binance Coin", callback_data='bnb_doge')
            i8 = types.InlineKeyboardButton(
                "Litecoin", callback_data='ltc_doge')
            markup.add(i1, i2, i3, i4, i5, i6, i8)

            bot.send_message(
                message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É. –Ø –æ—Ç–ø—Ä–∞–≤–ª—é –∫—É—Ä—Å üêïDogecoinüêï –∫ —ç—Ç–æ–π –≤–∞–ª—é—Ç–µ.', reply_markup=markup)
        elif message.text == 'ü™ôLitecoinü™ô':
            markup = types.InlineKeyboardMarkup(row_width=2)
            i1 = types.InlineKeyboardButton("–†—É–±–ª—å", callback_data='ltc_rur')
            i2 = types.InlineKeyboardButton("–î–æ–ª–ª–∞—Ä", callback_data='ltc_usd')
            i3 = types.InlineKeyboardButton("–ë–∏—Ç–∫–æ–∏–Ω", callback_data='ltc_btc')
            i4 = types.InlineKeyboardButton("–≠—Ñ–∏—Ä–∏—É–º", callback_data='ltc_eth')
            i5 = types.InlineKeyboardButton("Tether", callback_data='ltc_usdt')
            i7 = types.InlineKeyboardButton(
                "Dogecoin", callback_data='ltc_doge')
            markup.add(i1, i2, i3, i4, i5, i7)

            bot.send_message(
                message.chat.id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –≤—Ç–æ—Ä—É—é –≤–∞–ª—é—Ç—É. –Ø –æ—Ç–ø—Ä–∞–≤–ª—é –∫—É—Ä—Å ü™ôLitecoinü™ô –∫ —ç—Ç–æ–π –≤–∞–ª—é—Ç–µ.', reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            slovarik = {
                "usd": "üí≤–î–æ–ª–ª–∞—Äüí≤",
                "rur": "üá∑üá∫–†—É–±–ª—åüá∑üá∫",
                "btc": "üÜô–ë–∏—Ç–∫–æ–∏–ΩüÜô",
                "eth": "üåØ–≠—Ñ–∏—Ä–∏—É–ºüåØ",
                "usdt": "ü§ëTetherü§ë",
                "bnb": "‚ú°Binance Coin‚ú°",
                "doge": "üêïDogecoinüêï",
                "ltc": "ü™ôLitecoinü™ô"
            }
            flex = call.data
            if flex[3] == '_':
                flex1 = flex[:3]
                flex2 = flex[4:]
            else:
                flex1 = flex[:4]
                flex2 = flex[5:]
            req = requests.get("https://yobit.net/api/3/ticker/" + flex)
            response = req.json()
            sell_price = response[flex]["sell"]
            buy_price = response[flex]["buy"]
            average_price = response[flex]["avg"]
            bot.send_message(
                call.message.chat.id,
                f"{datetime.now().strftime('%Y-%m-%d %H:%M')}\n–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –≤–∞–ª—é—Ç—ã " + slovarik[flex1] + f": {buy_price} " + slovarik[flex2] + ".\n–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏ –≤–∞–ª—é—Ç—ã " + slovarik[
                    flex1] + f": {sell_price} " + slovarik[flex2] + ".\n–°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏ –≤–∞–ª—é—Ç—ã " + slovarik[flex1] + f" –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: {average_price} " + slovarik[flex2] + "."
            )
            if sell_price / average_price < 0.99:
                bot.send_message(
                    call.message.chat.id,
                    "–°—Ç–æ–∏—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –Ω–∞–¥ –ø–æ–∫—É–ø–∫–æ–π –≤–∞–ª—é—Ç—ã " +
                    slovarik[flex1] +
                    ", —Ç–∞–∫ –∫–∞–∫ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–∞–ª—é—Ç–∞ –ø—Ä–æ–¥–∞—ë—Ç—Å—è –ø–æ –∑–∞–Ω–∏–∂–µ–Ω–Ω–æ–π —Ü–µ–Ω–µ!"
                )
            elif buy_price / average_price > 0.99:
                bot.send_message(
                    call.message.chat.id,
                    "–†–µ—à–∞—Ç—å, –∫–æ–Ω–µ—á–Ω–æ, —Ç–µ–±–µ, –Ω–æ —è –±—ã –Ω–µ —É–ø—É—Å—Ç–∏–ª –º–æ–º–µ–Ω—Ç –∏ –ø—Ä–æ–¥–∞–ª " +
                    slovarik[flex1] +
                    ", —Ç–∞–∫ –∫–∞–∫ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –≤–∞–ª—é—Ç–∞ –≤–∑–ª–µ—Ç–µ–ª–∞ –≤ —Ü–µ–Ω–µ. –ê –º–æ–∂–µ—Ç, —ç—Ç–æ "
                )
            bot.send_message(
                call.message.chat.id,
                "–ß—Ç–æ-—Ç–æ –µ—â—ë?"
            )
        # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ü–æ–Ω—è–ª!",
                                  reply_markup=None)

    except Exception as e:
        print(repr(e))
        print("sis")


bot.polling(none_stop=True)
